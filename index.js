const inquirer = require("inquirer");
const fs = require('fs');
const { Circle, Square, Triangle, Heart, Hands, Skull, Bird } = require('./lib/shapes');

const questions = [
    // logo text
    {
        type: "input",
        name: "logoTxt",
        message: "Please enter the text to use for the logo (3 character max)"
    },
    // shape selection
    {
        type: "list",
        name: "logoShape",
        message: "Please select the shape for this logo",
        choices: ["Circle", "Square", "Triangle", "Heart", "Hands", "Bird", "Skull"],
    },
    // color
    {
        type: "input",
        name: "logoColor",
        message: "Please enter the color to use for the logo"
    },
];



// function to write .svg file
const publishLogo = (fileName, data) => {
    fs.writeFile(fileName, data, (err) => {
        if (err) { console.log(err) } else { console.log("logo successfully generated enjoy!") }
    });
};

// function to generate logo
const generateLogo = function (answers) {
    const shape = generateShape(answers.logoShape);

    return `
        <svg fill="${answers.logoColor}" 
            ${shape.render()}
            <![CDATA[${answers.logoTxt}]]></text>
        </svg>
    `;
};

// shape logic function
function generateShape(logoShape) {
    let imgShape = '';
    

    if (logoShape == 'Circle') {
        imgShape = new Circle(50, 50, 50);
    } else {
        if (logoShape == 'Square') { 
            imgShape = new Square(10, 10, 100, 100) 
        }
        else {
            if (logoShape == 'Triangle') {
                imgShape = new Triangle(150, 18, 244, 182, 56, 182)
            } else {
                if (logoShape == 'Heart') {
                    imgShape = new Heart("M 10, 30 a 20,20 0,0,1 40,0 a 20,20 0,0,1 40,0 Q 90,60 50,90 Q 10,60 10,30 z")
                } else {
                    if (logoShape == 'Hands') {
                        imgShape = new Hands(`translate(0.000000,200.000000) scale(0.100000,-0.100000)"><path d="M2928 1925 c-3 -3 -54 -11 -114 -19 -126 -16 -238 -60 -409 -163 -55 -32 -122 -68 -150 -78 -75 -28 -146 -104 -169 -181 -10 -34 -29 -74 -43 -88 -13 -15 -77 -62 -142 -105 -65 -44 -134 -98 -154 -121 -61 -72 -57 -135 14 -195 27 -22 38 -25 68 -20 60 11 171 75 240 139 l33 31 -8 -50 c-4 -27 -8 -65 -8 -83 0 -26 -1 -30 -9 -16 -5 9 -7 37 -3 62 l6 46 -27 -26 c-16 -14 -52 -41 -82 -59 -42 -25 -58 -43 -77 -83 -13 -28 -24 -57 -24 -64 0 -31 -43 -136 -62 -152 -37 -30 -214 -50 -363 -40 -87 6 -162 -50 -153 -113 3 -23 17 -29 113 -46 33 -6 80 -17 105 -24 l45 -14 -30 -13 c-16 -6 -68 -14 -115 -17 -99 -7 -151 -29 -180 -76 -21 -34 -26 -82 -11 -106 6 -10 19 -12 42 -7 18 3 84 11 146 16 66 6 135 18 165 30 61 23 61 23 53 10 -11 -18 -170 -60 -228 -60 -53 0 -58 -2 -68 -27 -13 -35 6 -87 29 -78 9 3 62 10 118 16 69 6 147 23 246 53 223 68 213 62 258 158 45 96 90 143 200 211 42 25 83 54 93 64 9 11 59 104 112 207 52 104 112 213 131 242 53 79 131 144 247 204 56 29 104 54 106 56 8 7 40 186 50 279 13 132 24 305 18 305 -2 0 -6 -2 -9 -5z m-908 -1025 c-50 -58 -81 -84 -43 -37 66 82 79 97 86 97 5 0 -14 -27 -43 -60z m-60 -73 c0 -2 -10 -12 -22 -23 l-23 -19 19 23 c18 21 26 27 26 19z m-50 -41 c0 -2 -8 -10 -17 -17 -16 -13 -17 -12 -4 4 13 16 21 21 21 13z"/><path d="M1465 1769 c-110 -11 -408 -100 -444 -132 -13 -12 -40 -58 -61 -103 -40 -85 -65 -111 -170 -175 -100 -60 -128 -87 -161 -157 -17 -37 -68 -136 -112 -221 -114 -217 -167 -271 -355 -366 l-89 -45 -21 -123 c-22 -124 -46 -412 -37 -428 18 -28 145 -19 253 18 68 22 259 119 315 159 26 19 72 43 100 54 99 37 149 89 181 188 24 72 50 100 169 177 221 145 264 234 160 325 -29 26 -42 31 -67 26 -51 -10 -147 -62 -213 -115 -35 -28 -63 -45 -63 -38 1 6 7 39 15 72 l15 60 -5 -54 -4 -54 22 20 c12 11 49 38 83 61 66 44 89 82 114 190 16 68 48 115 85 123 117 28 212 39 302 33 88 -5 101 -3 131 15 39 25 57 60 48 95 -5 20 -14 26 -44 31 -20 3 -74 14 -118 25 -104 25 -210 25 -320 0 -99 -23 -126 -19 -38 5 33 9 66 19 74 22 15 5 157 18 315 29 50 3 104 10 122 15 46 15 93 72 93 114 0 61 -5 65 -71 58 -32 -3 -59 -3 -59 0 0 3 5 18 12 32 8 19 8 31 0 50 -13 28 -11 28 -157 14z m3 -106 c-16 -2 -40 -2 -55 0 -16 2 -3 4 27 4 30 0 43 -2 28 -4z m-403 -515 c-50 -41 -60 -52 -115 -122 -44 -57 -76 -83 -88 -72 -3 3 0 6 5 6 6 0 39 33 73 73 56 66 144 147 158 147 4 0 -11 -15 -33 -32z m-536 -968 c-42 -22 -174 -60 -204 -59 -11 0 19 11 66 24 47 13 101 30 120 39 49 21 60 19 18 -4z"/></g>`)
                    } else {
                        if (logoShape == 'Skull') {
                            imgShape = new Skull(`translate(0.000000,682.000000) scale(0.100000,-0.100000)"><path d="M2480 6414 c-232 -29 -542 -144 -736 -274 -214 -144 -409 -346 -512 -530 -40 -73 -97 -238 -124 -364 -19 -89 -22 -132 -22 -351 -1 -217 2 -265 21 -366 33 -170 55 -235 151 -434 l87 -180 0 -100 c-1 -55 -5 -152 -9 -216 -11 -143 -5 -175 40 -228 69 -80 186 -122 393 -140 183 -17 220 -29 253 -81 29 -46 29 -91 2 -235 -14 -80 -23 -154 -19 -172 16 -84 177 -165 429 -215 257 -51 616 -12 819 88 142 70 160 109 126 273 -43 206 -27 282 66 313 28 9 121 23 207 32 208 22 303 56 372 137 45 53 51 85 40 228 -4 64 -8 161 -9 216 l0 100 82 165 c142 286 178 451 177 810 0 264 -11 348 -68 524 -78 238 -200 410 -425 600 -219 185 -484 315 -773 378 -74 16 -137 21 -313 23 -121 2 -236 1 -255 -1z m-211 -1965 c63 -13 138 -78 172 -146 21 -42 24 -63 24 -168 0 -104 -3 -125 -22 -160 -70 -131 -267 -218 -493 -219 -157 -1 -249 38 -304 128 -27 42 -31 59 -34 141 -9 195 68 314 248 385 110 43 304 62 409 39z m1189 -14 c149 -36 269 -129 311 -240 20 -51 22 -75 19 -161 -3 -92 -6 -106 -34 -150 -57 -93 -147 -130 -314 -127 -225 3 -414 88 -483 218 -19 34 -22 56 -22 155 0 122 8 155 53 223 28 43 96 87 151 98 53 12 246 2 319 -16z m-715 -703 c20 -22 115 -223 147 -310 39 -108 2 -145 -120 -122 -58 11 -82 11 -140 0 -121 -23 -156 13 -119 123 26 77 124 285 146 309 21 23 65 23 86 0z"/> <path d="M1060 3121 c-89 -18 -167 -82 -209 -171 -25 -52 -26 -62 -23 -194 3 -161 6 -154 -99 -222 -112 -72 -158 -152 -159 -274 0 -180 129 -303 320 -304 64 0 96 7 220 49 250 85 286 78 888 -176 227 -96 246 -107 210 -122 -7 -3 -65 -29 -128 -57 -177 -79 -443 -184 -567 -224 -158 -51 -198 -49 -404 15 -150 46 -171 50 -239 46 -96 -5 -167 -35 -221 -94 -59 -65 -79 -114 -79 -203 0 -124 49 -206 172 -287 38 -25 73 -53 78 -63 6 -10 9 -81 7 -157 -2 -127 0 -142 22 -191 50 -112 166 -180 287 -169 74 7 129 33 191 90 57 52 84 99 128 222 20 55 48 122 63 149 77 142 224 235 939 598 l242 123 108 -53 c170 -84 618 -319 723 -379 150 -87 256 -160 296 -206 40 -46 87 -140 129 -261 41 -115 96 -191 172 -236 174 -104 381 -26 438 163 13 41 14 77 9 172 -7 140 -8 139 96 208 71 47 135 122 150 177 5 19 10 67 10 106 0 85 -30 153 -92 209 -69 63 -119 80 -228 79 -86 0 -109 -5 -236 -47 -182 -60 -229 -62 -387 -11 -171 55 -680 263 -705 289 -3 3 -1 10 5 16 22 22 563 245 713 294 135 45 219 40 390 -19 165 -57 215 -64 300 -42 101 26 179 87 220 172 29 59 28 189 -1 247 -36 69 -68 104 -138 150 -109 73 -107 67 -103 227 3 131 2 141 -22 193 -29 60 -98 131 -151 153 -20 8 -67 14 -110 14 -61 0 -85 -5 -126 -25 -109 -56 -159 -123 -231 -315 -59 -155 -99 -213 -195 -281 -149 -106 -398 -245 -810 -452 l-222 -112 -138 68 c-213 106 -582 302 -709 375 -263 155 -310 203 -379 393 -48 134 -94 217 -146 264 -74 67 -186 103 -269 86z"/></g>`)
                        } else {
                            if (logoShape == 'Bird') {
                                imgShape = new Bird(`translate(0.000000,243.000000) scale(0.100000,-0.100000)"><path d="M1050 2416 c0 -4 47 -87 105 -185 107 -181 123 -224 85 -236 -21 -7-133 20 -235 55 -141 49 -309 70 -613 76 -158 4 -285 4 -282 1 3 -3 50 -23 105 -46 87 -35 96 -40 65 -41 -31 -2 -21 -8 92 -63 141 -69 156 -79 103 -67 -46 10 -41 5 43 -43 47 -27 58 -37 37 -32 -28 6 -26 3 32 -57 48 -49 79 -96 143 -218 45 -85 89 -163 98 -174 10 -10 59 -50 110 -88 82 -61 104 -72 174 -89 43 -10 101 -19 127 -19 47 0 49 -1 54 -32 11 -71 -115 -224 -255 -312 -67 -41 -101 -53 -334 -115 -255 -68 -396 -93 -599 -108 l-90 -6 95 -24 c71 -17 136 -25 255 -30 88 -3 170 -9 182 -14 26 -10 44 -64 34 -107 -3 -16 -22 -42 -41 -58 -92 -75 -238 -215 -289 -279 -61 -75 -80 -101 -65 -93 287 161 455 289 710 539 175 171 180 173 387 171 377 -4 462 20 717 201 183 131 266 198 298 241 12 17 35 37 49 45 15 8 57 36 94 62 36 27 88 58 115 70 l49 22 -45 13 c-38 12 -49 21 -69 59 -27 50 -68 79 -164 116 -52 20 -64 21 -124 11 -38 -6 -78 -20 -93 -32 -14 -11 -37 -27 -52 -35 -25 -14 -29 -14 -47 4 -11 11 -22 41 -26 72 -19 145 -133 330 -266 434 -35 28 -102 86 -149 131 -58 54 -117 98-185 136 -151 85 -335 164 -335 144z"/></g>`)
                            }
                        }
                    }
                }
            }
        }
    }
    return imgShape;
};

// initialize function
function init() {
    // helpful hint to quit application
    const helpfulHint = () => {
        console.log("Helpful hint - to quit this app anytime press ctrl + c")
    }

    helpfulHint();

    // prompt for user input
    inquirer.prompt(questions).then((answers) => {
        const logoContent = generateLogo(answers);
        publishLogo(`logo.svg`, logoContent);
    });
}

init();

module.exports = {
    generateShape,
    generateLogo
};